(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{118:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return s}));var i=n(3),a=n(8),r=(n(0),n(123)),o=n(159),d=n(131),l={id:"individual_glyph_info",title:"Individual Glyph Information",sidebar_label:"Individual Glyph Info"},c={unversionedId:"file_format/individual_glyph_info",id:"file_format/individual_glyph_info",isDocsHomePage:!1,title:"Individual Glyph Information",description:"The beginning of the section containing information for individual glyphs is specified by the CHARS keyword (followed by the number of glyphs in the font). Individual glyphs are delimited by the  STARTCHAR and ENDCHAR keywords; between these keywords are metrics information and the bitmap data.",source:"@site/bdf_spec/file_format/individual_glyph_info.mdx",slug:"/file_format/individual_glyph_info",permalink:"/bdf_spec/file_format/individual_glyph_info",editUrl:"https://github.com/tomchen/font-website/edit/main/bdf_spec/file_format/individual_glyph_info.mdx",version:"current",sidebar_label:"Individual Glyph Info",sidebar:"sidebar",previous:{title:"Global Font Information",permalink:"/bdf_spec/file_format/global_font_info"},next:{title:"Examples",permalink:"/bdf_spec/examples"}},b=[{value:"<code>CHARS</code>",id:"chars",children:[]},{value:"<code>STARTCHAR</code>",id:"startchar",children:[]},{value:"<code>ENCODING</code>",id:"encoding",children:[]},{value:"<code>SWIDTH</code>",id:"swidth",children:[]},{value:"<code>DWIDTH</code>",id:"dwidth",children:[]},{value:"<code>SWIDTH1</code>",id:"swidth1",children:[]},{value:"<code>DWIDTH1</code>",id:"dwidth1",children:[]},{value:"<code>VVECTOR</code>",id:"vvector",children:[{value:"Figure 1",id:"figure-1",children:[]}]},{value:"<code>BBX</code>",id:"bbx",children:[]},{value:"<code>BITMAP</code>",id:"bitmap",children:[]},{value:"<code>ENDCHAR</code>",id:"endchar",children:[]},{value:"<code>ENDFONT</code>",id:"endfont",children:[]}],p={toc:b};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(i.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"The beginning of the section containing information for individual glyphs is specified by the ",Object(r.b)("inlineCode",{parentName:"p"},"CHARS")," keyword (followed by the number of glyphs in the font). Individual glyphs are delimited by the  ",Object(r.b)("inlineCode",{parentName:"p"},"STARTCHAR")," and ",Object(r.b)("inlineCode",{parentName:"p"},"ENDCHAR")," keywords; between these keywords are metrics information and the bitmap data."),Object(r.b)("p",null,"The glyph metrics data includes both the scalable width (the device independent width of the corresponding outline font glyph) and the width of the screen font glyph, expressed in device pixels. The scalable width can be used by applications for accurately calculating line widths and compensating for round-off errors."),Object(r.b)("p",null,"The glyph data section is introduced by the keyword:"),Object(r.b)("h2",{id:"chars"},Object(r.b)("inlineCode",{parentName:"h2"},"CHARS")),Object(r.b)(o.a,{keyword:"CHARS",value:"nglyphs",mdxType:"Keyword"}),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"CHARS")," is followed by ",Object(r.b)("em",{parentName:"p"},"nglyphs"),", the number of glyphs that follow. To make sure that the correct number of glyphs were actually read and processed, error checking is recommended at the end of the file."),Object(r.b)("p",null,"Each of the glyphs is then represented by the following:"),Object(r.b)("h2",{id:"startchar"},Object(r.b)("inlineCode",{parentName:"h2"},"STARTCHAR")),Object(r.b)(o.a,{keyword:"STARTCHAR",value:"string",mdxType:"Keyword"}),Object(r.b)("p",null,"The word ",Object(r.b)("inlineCode",{parentName:"p"},"STARTCHAR")," followed by a string containing the name for the glyph. In base fonts, this should correspond to the name in the PostScript language outline font\u2019s encoding vector. In a Composite font (Type 0), the value may be a numeric offset or glyph ID."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(i.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"In versions of this document prior to 2.2, this value was limited to a string of 14 characters."))),Object(r.b)("h2",{id:"encoding"},Object(r.b)("inlineCode",{parentName:"h2"},"ENCODING")),Object(r.b)(o.a,{keyword:"ENCODING",value:"integer (integer)",mdxType:"Keyword"}),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"ENCODING")," is followed by a positive integer representing the Adobe Standard Encoding value. If the character is not in the Adobe Standard Encoding, ",Object(r.b)("inlineCode",{parentName:"p"},"ENCODING")," is followed by \u20131 and optionally by another integer specifying the glyph index for the non-standard encoding."),Object(r.b)("h2",{id:"swidth"},Object(r.b)("inlineCode",{parentName:"h2"},"SWIDTH")),Object(r.b)(o.a,{keyword:"SWIDTH",value:"swx0 swy0",mdxType:"Keyword"}),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"SWIDTH")," is followed by swx0 and swy0, the scalable width of the glyph in x and y for writing mode 0. The scalable widths are of type ",Object(r.b)("em",{parentName:"p"},"Number")," and are in units of 1/1000th of the size of the glyph and correspond to the widths found in AFM files (for outline fonts). If the size of the glyph is ",Object(r.b)("em",{parentName:"p"},"p")," points, the width information must be scaled by ",Object(r.b)("em",{parentName:"p"},"p"),"/1000 to get the width of the glyph in printer\u2019s points. This width information should be regarded as a vector indicating the position of the next glyph\u2019s origin relative to the origin of this glyph. ",Object(r.b)("inlineCode",{parentName:"p"},"SWIDTH")," is mandatory for all writing mode 0 fonts."),Object(r.b)("p",null,"To convert the scalable width to the width in device pixels, multiply ",Object(r.b)("inlineCode",{parentName:"p"},"SWIDTH")," times ",Object(r.b)("em",{parentName:"p"},"p"),"/1000 times ",Object(r.b)("em",{parentName:"p"},"r"),"/72, where ",Object(r.b)("em",{parentName:"p"},"r")," is the device resolution in pixels per inch. The result is a real number giving the ideal width in device pixels. The actual device width must be an integral number of device pixels and is given by the ",Object(r.b)("inlineCode",{parentName:"p"},"DWIDTH")," entry."),Object(r.b)("h2",{id:"dwidth"},Object(r.b)("inlineCode",{parentName:"h2"},"DWIDTH")),Object(r.b)(o.a,{keyword:"DWIDTH",value:"dwx0 dwy0",mdxType:"Keyword"}),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"DWIDTH")," specifies the widths in x and y, dwx0 and dwy0, in device pixels. Like ",Object(r.b)("inlineCode",{parentName:"p"},"SWIDTH"),", this width information is a vector indicating the position of the next glyph\u2019s origin relative to the origin of this glyph. ",Object(r.b)("inlineCode",{parentName:"p"},"DWIDTH")," is mandatory for all writing mode 0 fonts."),Object(r.b)("h2",{id:"swidth1"},Object(r.b)("inlineCode",{parentName:"h2"},"SWIDTH1")),Object(r.b)(o.a,{keyword:"SWIDTH1",value:"swx1 swy1",mdxType:"Keyword"}),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"SWIDTH1")," is followed by the values for swx1 and swy1, the scalable width of the glyph in x and y, for writing mode 1 (vertical direction). The values are of type ",Object(r.b)("inlineCode",{parentName:"p"},"Number"),", and represent the widths in glyph space coordinates."),Object(r.b)("h2",{id:"dwidth1"},Object(r.b)("inlineCode",{parentName:"h2"},"DWIDTH1")),Object(r.b)(o.a,{keyword:"DWIDTH1",value:"dwx1 dwy1",mdxType:"Keyword"}),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"DWIDTH1")," specifies the integer pixel width of the glyph in x and y. Like ",Object(r.b)("inlineCode",{parentName:"p"},"SWIDTH1"),", this width information is a vector indicating the position of the next glyph\u2019s origin relative to the origin of this glyph. ",Object(r.b)("inlineCode",{parentName:"p"},"DWIDTH1")," is mandatory for all writing mode 1 fonts."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(i.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"If ",Object(r.b)("inlineCode",{parentName:"p"},"METRICSSET")," is 1 or 2, both ",Object(r.b)("inlineCode",{parentName:"p"},"SWIDTH1")," and ",Object(r.b)("inlineCode",{parentName:"p"},"DWIDTH1")," must be present; if ",Object(r.b)("inlineCode",{parentName:"p"},"METRICSSET")," is 0, both should be absent."))),Object(r.b)("h2",{id:"vvector"},Object(r.b)("inlineCode",{parentName:"h2"},"VVECTOR")),Object(r.b)(o.a,{keyword:"VVECTOR",value:"xoff yoff",mdxType:"Keyword"}),Object(r.b)("p",null,"VVECTOR (optional) specifies the components of a vector from origin 0 (the origin for writing direction 0) to origin 1 (the origin for writing direction 1). If the value of ",Object(r.b)("inlineCode",{parentName:"p"},"METRICSSET")," is 1 or 2, ",Object(r.b)("inlineCode",{parentName:"p"},"VVECTOR")," must be specified either at the global level, or for each individual glyph. If specified at the global level, the ",Object(r.b)("inlineCode",{parentName:"p"},"VVECTOR")," is the same for all glyphs, though the inclusion of this keyword in an individual glyph has the effect of overriding the bal value for that specific glyph."),Object(r.b)("h3",{id:"figure-1"},"Figure 1"),Object(r.b)("p",null,"Figure 1 illustrates how ",Object(r.b)("inlineCode",{parentName:"p"},"VVECTOR")," relates the origins for writing directions 0 and 1."),Object(r.b)(d.a,{src:"bdf_spec/1.png",caption:"Relationship between metrics for writing direction 0 and 1",figure_number:1,width:700,position:"center",imgUrl:!0,mdxType:"Figure"}),Object(r.b)("h2",{id:"bbx"},Object(r.b)("inlineCode",{parentName:"h2"},"BBX")),Object(r.b)(o.a,{keyword:"BBX",value:"BBw BBh BBxoff0x BByoff0y",mdxType:"Keyword"}),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"BBX")," is followed by BBw, the width of the black pixels in x, and BBh, the height in y. These are followed by the x and y displacement, BBxoff0 and BByoff0, of the lower left corner of the bitmap from origin 0. All values are are an integer number of pixels."),Object(r.b)("p",null,"If the font specifies metrics for writing direction 1, ",Object(r.b)("inlineCode",{parentName:"p"},"VVECTOR")," specifies the offset from origin 0 to origin 1. For example, for writing direction 1, the offset from origin 1 to the lower left corner of the bitmap would be:"),Object(r.b)("p",{style:{textIndent:"2em"}},"BBxoff1x,y = BBxoff0x,y \u2013 VVECTOR"),Object(r.b)("h2",{id:"bitmap"},Object(r.b)("inlineCode",{parentName:"h2"},"BITMAP")),Object(r.b)(o.a,{keyword:"BITMAP",value:"<hex data>",mdxType:"Keyword"}),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"BITMAP")," introduces the hexadecimal data for the character bitmap. From the ",Object(r.b)("inlineCode",{parentName:"p"},"BBX")," value for ",Object(r.b)("em",{parentName:"p"},"h"),", find ",Object(r.b)("em",{parentName:"p"},"h")," lines of hex-encoded bitmap, padded on the right with zero\u2019s to the nearest byte (that is, multiple of 8). Hex data can be turned into binary by taking two bytes at a time, each of which represents 4 bits of the 8bit value. For example, the byte 01101101 is two hex digits: 6 (0110 in hex) and D (1101 in hex)."),Object(r.b)("h2",{id:"endchar"},Object(r.b)("inlineCode",{parentName:"h2"},"ENDCHAR")),Object(r.b)(o.a,{keyword:"ENDCHAR",mdxType:"Keyword"}),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"ENDCHAR")," delimits the end of the glyph description."),Object(r.b)("h2",{id:"endfont"},Object(r.b)("inlineCode",{parentName:"h2"},"ENDFONT")),Object(r.b)(o.a,{keyword:"ENDFONT",mdxType:"Keyword"}),Object(r.b)("p",null,"The entire file is terminated with the word ",Object(r.b)("inlineCode",{parentName:"p"},"ENDFONT"),". If this is encountered before all of the glyphs have been read, it is an error condition."))}s.isMDXComponent=!0},123:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return f}));var i=n(0),a=n.n(i);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),b=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):d(d({},t),e)),n},p=function(e){var t=b(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},h=a.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=b(n),h=i,f=p["".concat(o,".").concat(h)]||p[h]||s[h]||r;return n?a.a.createElement(f,d(d({ref:t},c),{},{components:n})):a.a.createElement(f,d({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=h;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d.mdxType="string"==typeof e?e:i,o[1]=d;for(var c=2;c<r;c++)o[c]=n[c];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},126:function(e,t,n){"use strict";n.d(t,"b",(function(){return r})),n.d(t,"a",(function(){return o}));var i=n(22),a=n(127);function r(){var e=Object(i.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,r=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,i){var r=void 0===i?{}:i,o=r.forcePrependBaseUrl,d=void 0!==o&&o,l=r.absolute,c=void 0!==l&&l;if(!n)return n;if(n.startsWith("#"))return n;if(Object(a.b)(n))return n;if(d)return t+n;var b=n.startsWith(t)?n:t+n.replace(/^\//,"");return c?e+b:b}(r,n,e,t)}}}function o(e,t){return void 0===t&&(t={}),(0,r().withBaseUrl)(e,t)}},127:function(e,t,n){"use strict";function i(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!i(e)}n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return a}))},131:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var i=n(0),a=n.n(i),r=n(126);function o(e){var t=e.src,n=e.caption,i=e.figure_number,o=e.width,d=e.imgUrl,l=e.link,c=e.position;return a.a.createElement("div",{style:{display:"flow-root"}},a.a.createElement("figure",{style:{float:"left"===c||"right"===c?c:"none",textAlign:"center",margin:"1em"}},l?a.a.createElement("a",{href:l},a.a.createElement("img",{alt:n,src:d?Object(r.a)("img/"+t):t,width:o})):a.a.createElement("img",{alt:n,src:d?Object(r.a)("img/"+t):t,width:o}),a.a.createElement("figcaption",{style:{fontStyle:"italic"}},i&&a.a.createElement("strong",null,"Figure ",i," "),n)))}},159:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var i=n(0),a=n.n(i);function r(e){var t=e.keyword,n=e.value;return a.a.createElement("p",null,a.a.createElement("code",null,a.a.createElement("strong",null,t)," ",a.a.createElement("i",null,n)))}}}]);