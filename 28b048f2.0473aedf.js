(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{123:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=a.a.createContext({}),l=function(e){var t=a.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):b(b({},t),e)),n},u=function(e){var t=l(e.components);return a.a.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,d=u["".concat(p,".").concat(m)]||u[m]||s[m]||i;return n?a.a.createElement(d,b(b({ref:t},o),{},{components:n})):a.a.createElement(d,b({ref:t},o))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,p=new Array(i);p[0]=m;var b={};for(var c in t)hasOwnProperty.call(t,c)&&(b[c]=t[c]);b.originalType=e,b.mdxType="string"==typeof e?e:r,p[1]=b;for(var o=2;o<i;o++)p[o]=n[o];return a.a.createElement.apply(null,p)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},84:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return p})),n.d(t,"metadata",(function(){return b})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return l}));var r=n(3),a=n(8),i=(n(0),n(123)),p={id:"_bitmap",title:"Function: $Bitmap",sidebar_label:"$Bitmap",custom_edit_url:null,hide_title:!0},b={unversionedId:"api/functions/_bitmap",id:"api/functions/_bitmap",isDocsHomePage:!1,title:"Function: $Bitmap",description:"Function: $Bitmap",source:"@site/bdfparser_js/api/functions/_bitmap.md",slug:"/api/functions/_bitmap",permalink:"/bdfparser_js/api/functions/_bitmap",editUrl:null,version:"current",sidebar_label:"$Bitmap",sidebar:"sidebar",previous:{title:"Type alias: TodataFuncRetType<T>",permalink:"/bdfparser_js/api/types/todatafuncrettype"},next:{title:"Function: $Font",permalink:"/bdfparser_js/api/functions/_font"}},c=[],o={toc:c};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"function-bitmap"},"Function: $Bitmap"),Object(i.b)("p",null,"\u25b8 ",Object(i.b)("inlineCode",{parentName:"p"},"Const"),Object(i.b)("strong",{parentName:"p"},"$Bitmap"),"(",Object(i.b)("inlineCode",{parentName:"p"},"bin_bitmap_list"),": ",Object(i.b)("em",{parentName:"p"},"string"),"[]): ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"/bdfparser_js/api/classes/bitmap"}),Object(i.b)("em",{parentName:"a"},"Bitmap"))),Object(i.b)("p",null,"Shortcut for ",Object(i.b)("inlineCode",{parentName:"p"},"new Bitmap(bin_bitmap_list)")," so you don't need to write ",Object(i.b)("inlineCode",{parentName:"p"},"new")),Object(i.b)("h4",{id:"parameters"},"Parameters:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Name"),Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"bin_bitmap_list")),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(i.b)("em",{parentName:"td"},"string"),"[]"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Binary bitmap data")))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Returns:")," ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"/bdfparser_js/api/classes/bitmap"}),Object(i.b)("em",{parentName:"a"},"Bitmap"))),Object(i.b)("p",null,"The newly instantiated ",Object(i.b)("inlineCode",{parentName:"p"},"Bitmap")," object"),Object(i.b)("p",null,"Defined in: ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/tomchen/bdfparser-js/blob/898ed20/src/bdfparser.ts#L1863"}),"bdfparser.ts:1863")))}l.isMDXComponent=!0}}]);