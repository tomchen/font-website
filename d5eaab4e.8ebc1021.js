(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{92:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return o}));var n=a(3),b=a(8),r=(a(0),a(97)),i={id:"font",title:"Font object",sidebar_label:"Font object"},l={unversionedId:"font",id:"font",isDocsHomePage:!1,title:"Font object",description:"Overview",source:"@site/bdfparser_py/font.mdx",slug:"/font",permalink:"/bdfparser_py/font",editUrl:"https://github.com/tomchen/font-website/edit/main/bdfparser_py/font.mdx",version:"current",sidebar_label:"Font object",sidebar:"sidebar",previous:{title:"BDF Parser (Python library)",permalink:"/bdfparser_py/"},next:{title:"Glyph object",permalink:"/bdfparser_py/glyph"}},c=[{value:"Overview",id:"overview",children:[]},{value:"<code>Font()</code>",id:"font",children:[]},{value:"<code>.headers</code>",id:"headers",children:[]},{value:"<code>.props</code>",id:"props",children:[]},{value:"<code>.glyphs</code>",id:"glyphs",children:[]},{value:"<code>.load_file_path()</code>",id:"load_file_path",children:[]},{value:"<code>.load_file_obj()</code>",id:"load_file_obj",children:[]},{value:"<code>.length()</code>",id:"length",children:[]},{value:"<code>.iterglyphs()</code>",id:"iterglyphs",children:[]},{value:"<code>.itercps()</code>",id:"itercps",children:[]},{value:"<code>.glyph()</code>",id:"glyph",children:[]},{value:"<code>.glyphbycp()</code>",id:"glyphbycp",children:[]},{value:"<code>.lacksglyphs()</code>",id:"lacksglyphs",children:[]},{value:"<code>.draw()</code>",id:"draw",children:[]},{value:"<code>.drawcps()</code>",id:"drawcps",children:[]},{value:"<code>.drawall()</code>",id:"drawall",children:[]}],p={toc:c};function o(e){var t=e.components,a=Object(b.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"overview"},"Overview"),Object(r.b)("h2",{id:"font"},Object(r.b)("inlineCode",{parentName:"h2"},"Font()")),Object(r.b)("h4",{id:"syntax"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"Font(arg)\n")),Object(r.b)("h4",{id:"examples"},"Examples"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"from bdfparser import Font\nfont = Font('tests/fonts/unifont-13.0.04.bdf')\n# same as:\n# font = Font(open('tests/fonts/unifont-13.0.04.bdf'))\n")),Object(r.b)("h4",{id:"parameters"},"Parameters"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("abbr",{title:"required"},"R"),"/",Object(r.b)("abbr",{title:"optional"},"O")),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Default Value"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"arg")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"string")," or ",Object(r.b)("em",{parentName:"td"},"file object")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"<","empty",">")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"File path as a ",Object(r.b)("em",{parentName:"td"},"string"),", or ",Object(r.b)("em",{parentName:"td"},"file object"),", or leave it empty")))),Object(r.b)("h4",{id:"return-value"},"Return value"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Font")," object"),Object(r.b)("h4",{id:"description"},"Description"),Object(r.b)("p",null,"Initialize a ",Object(r.b)("em",{parentName:"p"},"Font")," object. Load the BDF font file if a file path string or a file object is present."),Object(r.b)("h2",{id:"headers"},Object(r.b)("inlineCode",{parentName:"h2"},".headers")),Object(r.b)("h4",{id:"syntax-1"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),".headers\n")),Object(r.b)("h4",{id:"examples-1"},"Examples"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"font.headers\n# {'bdfversion': 2.1, 'fontname': '-gnu-Unifont-Medium-R-Normal-Sans-16-160-75-75-c-80-iso10646-1','fbbx': 16, 'fbby': 16, 'fbbxoff': 0, 'fbbyoff': -2, 'pointsize': 16, 'xres': 75, 'yres': 75, 'metricsset': 0}\nfont.headers['fontname']\n# '-gnu-Unifont-Medium-R-Normal-Sans-16-160-75-75-c-80-iso10646-1'\n")),Object(r.b)("h4",{id:"type"},"Type"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"dictionary")," (",Object(r.b)("em",{parentName:"p"},"string")," as keys, ",Object(r.b)("em",{parentName:"p"},"integer")," or ",Object(r.b)("em",{parentName:"p"},"string")," as values)"),Object(r.b)("h4",{id:"description-1"},"Description"),Object(r.b)("p",null,"This attribute of a ",Object(r.b)("em",{parentName:"p"},"Font")," object represents the header information which is typically all the information before the ",Object(r.b)("inlineCode",{parentName:"p"},"STARTPROPERTIES")," line in the font file."),Object(r.b)("p",null,"Font header's names (keys), value types, and their descriptions in the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"../bdf_spec/file_format/global_font_info"}),"BDF spec"),":"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'bdfversion'"),": (",Object(r.b)("em",{parentName:"li"},"float"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#startfont"}),Object(r.b)("inlineCode",{parentName:"a"},"STARTFONT"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'fontname'"),": (",Object(r.b)("em",{parentName:"li"},"string"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#font"}),Object(r.b)("inlineCode",{parentName:"a"},"FONT"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'pointsize'"),": (",Object(r.b)("em",{parentName:"li"},"integer"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#size"}),Object(r.b)("inlineCode",{parentName:"a"},"SIZE"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'xres'"),": (",Object(r.b)("em",{parentName:"li"},"integer"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#size"}),Object(r.b)("inlineCode",{parentName:"a"},"SIZE"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'yres'"),": (",Object(r.b)("em",{parentName:"li"},"integer"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#size"}),Object(r.b)("inlineCode",{parentName:"a"},"SIZE"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'fbbx'"),": (",Object(r.b)("em",{parentName:"li"},"integer"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#fontboundingbox"}),Object(r.b)("inlineCode",{parentName:"a"},"FONTBOUNDINGBOX"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'fbby'"),": (",Object(r.b)("em",{parentName:"li"},"integer"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#fontboundingbox"}),Object(r.b)("inlineCode",{parentName:"a"},"FONTBOUNDINGBOX"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'fbbxoff'"),": (",Object(r.b)("em",{parentName:"li"},"integer"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#fontboundingbox"}),Object(r.b)("inlineCode",{parentName:"a"},"FONTBOUNDINGBOX"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'fbbyoff'"),": (",Object(r.b)("em",{parentName:"li"},"integer"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#fontboundingbox"}),Object(r.b)("inlineCode",{parentName:"a"},"FONTBOUNDINGBOX"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'swx0'"),": (",Object(r.b)("em",{parentName:"li"},"integer"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#metrics-keywords"}),"Metrics keywords"),", see also ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/individual_glyph_info#swidth"}),Object(r.b)("inlineCode",{parentName:"a"},"SWIDTH"))," at glyph-level"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'swy0'"),": (",Object(r.b)("em",{parentName:"li"},"integer"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#metrics-keywords"}),"Metrics keywords"),", see also ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/individual_glyph_info#swidth"}),Object(r.b)("inlineCode",{parentName:"a"},"SWIDTH"))," at glyph-level"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'dwx0'"),": (",Object(r.b)("em",{parentName:"li"},"integer"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#metrics-keywords"}),"Metrics keywords"),", see also ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/individual_glyph_info#dwidth"}),Object(r.b)("inlineCode",{parentName:"a"},"DWIDTH"))," at glyph-level"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'dwy0'"),": (",Object(r.b)("em",{parentName:"li"},"integer"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#metrics-keywords"}),"Metrics keywords"),", see also ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/individual_glyph_info#dwidth"}),Object(r.b)("inlineCode",{parentName:"a"},"DWIDTH"))," at glyph-level"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'swx1'"),": (",Object(r.b)("em",{parentName:"li"},"integer"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#metrics-keywords"}),"Metrics keywords"),", see also ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/individual_glyph_info#swidth1"}),Object(r.b)("inlineCode",{parentName:"a"},"SWIDTH1"))," at glyph-level"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'swy1'"),": (",Object(r.b)("em",{parentName:"li"},"integer"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#metrics-keywords"}),"Metrics keywords"),", see also ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/individual_glyph_info#swidth1"}),Object(r.b)("inlineCode",{parentName:"a"},"SWIDTH1"))," at glyph-level"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'dwx1'"),": (",Object(r.b)("em",{parentName:"li"},"integer"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#metrics-keywords"}),"Metrics keywords"),", see also ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/individual_glyph_info#dwidth1"}),Object(r.b)("inlineCode",{parentName:"a"},"DWIDTH1"))," at glyph-level"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'dwy1'"),": (",Object(r.b)("em",{parentName:"li"},"integer"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#metrics-keywords"}),"Metrics keywords"),", see also ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/individual_glyph_info#dwidth1"}),Object(r.b)("inlineCode",{parentName:"a"},"DWIDTH1"))," at glyph-level"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'vvectorx'"),": (",Object(r.b)("em",{parentName:"li"},"integer"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#metrics-keywords"}),"Metrics keywords"),", see also ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/individual_glyph_info#vvector"}),Object(r.b)("inlineCode",{parentName:"a"},"VVECTOR"))," at glyph-level"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'vvectory'"),": (",Object(r.b)("em",{parentName:"li"},"integer"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#metrics-keywords"}),"Metrics keywords"),", see also ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/individual_glyph_info#vvector"}),Object(r.b)("inlineCode",{parentName:"a"},"VVECTOR"))," at glyph-level"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'metricsset'"),": (",Object(r.b)("em",{parentName:"li"},"integer"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#metricsset"}),Object(r.b)("inlineCode",{parentName:"a"},"METRICSSET"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'contentversion'"),": (",Object(r.b)("em",{parentName:"li"},"integer"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#contentversion"}),Object(r.b)("inlineCode",{parentName:"a"},"CONTENTVERSION"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'comment'"),": (",Object(r.b)("em",{parentName:"li"},"list")," of ",Object(r.b)("em",{parentName:"li"},"strings"),") see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../bdf_spec/file_format/global_font_info#comment"}),Object(r.b)("inlineCode",{parentName:"a"},"COMMENT")))),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Headers are to be distinguished from ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#props"}),"properties (props)")," which are inside the block between ",Object(r.b)("inlineCode",{parentName:"p"},"STARTPROPERTIES")," and ",Object(r.b)("inlineCode",{parentName:"p"},"ENDPROPERTIES")," lines in the font file."),Object(r.b)("p",{parentName:"div"},"Header names are defined in the spec, property names are not."))),Object(r.b)("h2",{id:"props"},Object(r.b)("inlineCode",{parentName:"h2"},".props")),Object(r.b)("h4",{id:"syntax-2"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),".props\n")),Object(r.b)("h4",{id:"examples-2"},"Examples"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"font.props\n# {'add_style_name': 'Sans Serif','average_width': '80','cap_height': '10',...,'weight_name': 'Medium','x_height': '8'}\n")),Object(r.b)("h4",{id:"type-1"},"Type"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"dictionary")," (",Object(r.b)("em",{parentName:"p"},"string")," as keys, ",Object(r.b)("em",{parentName:"p"},"integer")," or ",Object(r.b)("em",{parentName:"p"},"string")," as values)"),Object(r.b)("h4",{id:"description-2"},"Description"),Object(r.b)("p",null,"This attribute of a ",Object(r.b)("em",{parentName:"p"},"Font")," object represents the property infomation which is inside the block between ",Object(r.b)("inlineCode",{parentName:"p"},"STARTPROPERTIES")," and ",Object(r.b)("inlineCode",{parentName:"p"},"ENDPROPERTIES")," lines."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Properties (props) are to be distinguished from ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#headers"}),"headers")," which are typically all the information before the ",Object(r.b)("inlineCode",{parentName:"p"},"STARTPROPERTIES")," line in the font file."))),Object(r.b)("h2",{id:"glyphs"},Object(r.b)("inlineCode",{parentName:"h2"},".glyphs")),Object(r.b)("h4",{id:"syntax-3"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),".glyphs\n")),Object(r.b)("h4",{id:"type-2"},"Type"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"dictionary")," (",Object(r.b)("em",{parentName:"p"},"integer")," as keys, ",Object(r.b)("em",{parentName:"p"},"list")," as values)"),Object(r.b)("h4",{id:"description-3"},"Description"),Object(r.b)("p",null,"This attribute of a ",Object(r.b)("em",{parentName:"p"},"Font")," object represents the raw glyph data in the font."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"As raw data with values without their keys, you usually should not use it directly. Use other API methods instead, such as ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#glyph"}),".glyph()")," and ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#iterglyphs"}),".iterglyphs()"),"."))),Object(r.b)("h2",{id:"load_file_path"},Object(r.b)("inlineCode",{parentName:"h2"},".load_file_path()")),Object(r.b)("h4",{id:"syntax-4"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),".load_file_path(file_path)\n")),Object(r.b)("h4",{id:"parameters-1"},"Parameters"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("abbr",{title:"required"},"R"),"/",Object(r.b)("abbr",{title:"optional"},"O")),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Default Value"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"file_path")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Required"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"string")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"N/A")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Path of the BDF font file to load")))),Object(r.b)("h4",{id:"return-value-1"},"Return value"),Object(r.b)("p",null,"The ",Object(r.b)("em",{parentName:"p"},"Font")," object itself, with font loaded"),Object(r.b)("h4",{id:"description-4"},"Description"),Object(r.b)("p",null,"Load the BDF font file in the file path."),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#font"}),Object(r.b)("inlineCode",{parentName:"a"},"Font(file_path)"))," is equivalent to ",Object(r.b)("inlineCode",{parentName:"p"},"Font().load_file_path(file_path)"),"."),Object(r.b)("h2",{id:"load_file_obj"},Object(r.b)("inlineCode",{parentName:"h2"},".load_file_obj()")),Object(r.b)("h4",{id:"syntax-5"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),".load_file_obj(file_obj)\n")),Object(r.b)("h4",{id:"parameters-2"},"Parameters"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("abbr",{title:"required"},"R"),"/",Object(r.b)("abbr",{title:"optional"},"O")),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Default Value"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"file_obj")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Required"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"file object")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"N/A")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"file object")," of the BDF font file to load")))),Object(r.b)("h4",{id:"return-value-2"},"Return value"),Object(r.b)("p",null,"The ",Object(r.b)("em",{parentName:"p"},"Font")," object itself, with font loaded"),Object(r.b)("h4",{id:"description-5"},"Description"),Object(r.b)("p",null,"Load the BDF font file object."),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#font"}),Object(r.b)("inlineCode",{parentName:"a"},"Font(file_object)"))," is equivalent to ",Object(r.b)("inlineCode",{parentName:"p"},"Font().load_file_obj(file_object)"),"."),Object(r.b)("h2",{id:"length"},Object(r.b)("inlineCode",{parentName:"h2"},".length()")),Object(r.b)("h4",{id:"syntax-6"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),".length()\n")),Object(r.b)("h4",{id:"examples-3"},"Examples"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"l = font.length()\nl2 = len(font)\nl == l2  # True\n")),Object(r.b)("h4",{id:"parameters-3"},"Parameters"),Object(r.b)("p",null,"No parameters"),Object(r.b)("h4",{id:"return-value-3"},"Return value"),Object(r.b)("p",null,"(",Object(r.b)("em",{parentName:"p"},"integer"),") Actual glyph count in the font"),Object(r.b)("h4",{id:"description-6"},"Description"),Object(r.b)("p",null,"The method always returns how many glyphs actually exist in the font. This could be different with the glyph count number next to the 'CHARS' keyword, if so, there would be a warning when the font is loaded."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"font_obj.length()")," is equivalent to ",Object(r.b)("inlineCode",{parentName:"p"},"len(font_obj)"),"."),Object(r.b)("h2",{id:"iterglyphs"},Object(r.b)("inlineCode",{parentName:"h2"},".iterglyphs()")),Object(r.b)("h4",{id:"syntax-7"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),".iterglyphs(order, r)\n")),Object(r.b)("h4",{id:"examples-4"},"Examples"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"# print all basic latin letters (A-Za-z)'s character and bitmap shape, in reverse order:\nfor glyph in font.iterglyphs(order=2 ,r=[(65, 90), (97, 122)]):\n    print('Character \"' + glyph.chr() + '\"\\'s shape:')\n    print(glyph)\n# remove `order=2 ,r=[(65, 90), (97, 122)]` to print all glyphs in the font in normal ascending order\n")),Object(r.b)("h4",{id:"parameters-4"},"Parameters"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("abbr",{title:"required"},"R"),"/",Object(r.b)("abbr",{title:"optional"},"O")),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Default Value"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"order")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"integer")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"1")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"-1"),": reverse order in the BDF font file",Object(r.b)("br",null),Object(r.b)("inlineCode",{parentName:"td"},"0"),": order in the BDF font file",Object(r.b)("br",null),Object(r.b)("inlineCode",{parentName:"td"},"1"),": ascending codepoint order",Object(r.b)("br",null),Object(r.b)("inlineCode",{parentName:"td"},"2"),": descending codepoint order")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"r")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"See below"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"None")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Codepoint range, see below")))),Object(r.b)("p",null,"The codepoint range parameter ",Object(r.b)("inlineCode",{parentName:"p"},"r")," accepts:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"None")," (default): all the glyphs in the font"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("em",{parentName:"li"},"integer"),". Examples:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"128")," (Basic Latin / ASCII)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"0x100")," (Basic Latin and Latin-1 Supplement / cp1250 / cp1251 / cp1252)"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("em",{parentName:"li"},"tuple")," of ",Object(r.b)("em",{parentName:"li"},"integers"),". Examples:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"(0, 127)")," (same as ",Object(r.b)("inlineCode",{parentName:"li"},"128"),")"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"(0, 0xff)")," (same as ",Object(r.b)("inlineCode",{parentName:"li"},"0x100"),")"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"(48, 57)")," (all numbers 0-9)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"(65, 90)")," (all uppercase basic latin letters A-Z)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"(97, 122)")," (all lowercase basic latin letters a-z)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"(1328, 0x1032F)")))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("em",{parentName:"li"},"list")," of ",Object(r.b)("em",{parentName:"li"},"tuples")," of ",Object(r.b)("em",{parentName:"li"},"integers"),". Example:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"[(65, 90), (97, 122)]")," (all basic latin letters A-Za-z)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"[(0x2E80, 0x9FFF), (0xA960, 0xA97F), (0xAC00, 0xD7FF), (0xF900, 0xFAFF), (0xFE30, 0xFE4F), (0xFF00, 0xFFEF), (0x20000, 0x3134F)]")," (this is roughly all ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://en.wikipedia.org/wiki/CJK_characters"}),"CJK characters")," in the Unicode)")))),Object(r.b)("p",null,"See also ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Unicode_block"}),'Wikipedia article "Unicode block"')),Object(r.b)("h4",{id:"return-value-4"},"Return value"),Object(r.b)("p",null,"(",Object(r.b)("em",{parentName:"p"},"iterator")," of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"glyph"}),Object(r.b)("em",{parentName:"a"},"Glyph"))," objects/",Object(r.b)("inlineCode",{parentName:"p"},"None"),") An ",Object(r.b)("em",{parentName:"p"},"iterator")," of glyphs as ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"glyph"}),Object(r.b)("em",{parentName:"a"},"Glyph"))," objects. Missing glyphs are replaced by ",Object(r.b)("inlineCode",{parentName:"p"},"None")),Object(r.b)("h4",{id:"description-7"},"Description"),Object(r.b)("p",null,"This method returns an iterator of all the glyphs (as ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"glyph"}),Object(r.b)("em",{parentName:"a"},"Glyph"))," objects) in the font (default) or in the specified codepoint range in the font, sorted by the specified order (or by the ascending codepoint order by default)."),Object(r.b)("h2",{id:"itercps"},Object(r.b)("inlineCode",{parentName:"h2"},".itercps()")),Object(r.b)("h4",{id:"syntax-8"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),".itercps(order, r)\n")),Object(r.b)("h4",{id:"examples-5"},"Examples"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"for codepoint in font.itercps():\n    print(codepoint)\n")),Object(r.b)("h4",{id:"parameters-5"},"Parameters"),Object(r.b)("p",null,"See ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#iterglyphs"}),Object(r.b)("inlineCode",{parentName:"a"},".iterglyphs()")),'\'s "Parameters" section'),Object(r.b)("h4",{id:"return-value-5"},"Return value"),Object(r.b)("p",null,"(",Object(r.b)("em",{parentName:"p"},"iterator")," of ",Object(r.b)("em",{parentName:"p"},"integers"),") An iterator of the codepoints of glyphs"),Object(r.b)("h4",{id:"description-8"},"Description"),Object(r.b)("p",null,"This method is almost identical to ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#iterglyphs"}),Object(r.b)("inlineCode",{parentName:"a"},".iterglyphs()")),", except it returns an ",Object(r.b)("em",{parentName:"p"},"iterator")," of glyph codepoints instead of an ",Object(r.b)("em",{parentName:"p"},"iterator")," of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"glyph"}),Object(r.b)("em",{parentName:"a"},"Glyph"))," objects."),Object(r.b)("h2",{id:"glyph"},Object(r.b)("inlineCode",{parentName:"h2"},".glyph()")),Object(r.b)("h4",{id:"syntax-9"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),".glyph(character)\n")),Object(r.b)("h4",{id:"examples-6"},"Examples"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"# get glyph \"a\" and print its shape:\nglyph_a = font.glyph('a')\nprint(glyph_a)\n")),Object(r.b)("h4",{id:"parameters-6"},"Parameters"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("abbr",{title:"required"},"R"),"/",Object(r.b)("abbr",{title:"optional"},"O")),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Default Value"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"character")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Required"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"string")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"N/A")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Character (a one-character ",Object(r.b)("em",{parentName:"td"},"string"),") of the glyph you need")))),Object(r.b)("h4",{id:"return-value-6"},"Return value"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"glyph"}),Object(r.b)("em",{parentName:"a"},"Glyph"))," object"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"None")," if the glyph does not exist in the font")),Object(r.b)("h4",{id:"description-9"},"Description"),Object(r.b)("p",null,"Get a glyph (as Glyph object) by its character."),Object(r.b)("h2",{id:"glyphbycp"},Object(r.b)("inlineCode",{parentName:"h2"},".glyphbycp()")),Object(r.b)("h4",{id:"syntax-10"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),".glyphbycp(codepoint)\n")),Object(r.b)("h4",{id:"examples-7"},"Examples"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'# get glyph "a" whose codepoint is 97:\nglyph_a = font.glyphbycp(97)\n')),Object(r.b)("h4",{id:"parameters-7"},"Parameters"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("abbr",{title:"required"},"R"),"/",Object(r.b)("abbr",{title:"optional"},"O")),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Default Value"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"codepoint")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Required"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"integer")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"N/A")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Codepoint of the glyph you need")))),Object(r.b)("h4",{id:"return-value-7"},"Return value"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"glyph"}),Object(r.b)("em",{parentName:"a"},"Glyph"))," object"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"None")," if the glyph does not exist in the font")),Object(r.b)("h4",{id:"description-10"},"Description"),Object(r.b)("p",null,"Get a glyph (as Glyph object) by its codepoint."),Object(r.b)("h2",{id:"lacksglyphs"},Object(r.b)("inlineCode",{parentName:"h2"},".lacksglyphs()")),Object(r.b)("h4",{id:"syntax-11"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),".lacksglyphs(string)\n")),Object(r.b)("h4",{id:"examples-8"},"Examples"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"# This font only has latin and arabic support\ntestfont = Font('tests/fonts/unifont-13.0.04-for-test.bdf')\ntestfont.lacksglyphs('B\xe9 H\u597d\u0394i\u0628')  # ['\u597d', '\u0394']\ntestfont.lacksglyphs('B\xe9 Hi\u0628')  # None\n")),Object(r.b)("h4",{id:"parameters-8"},"Parameters"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("abbr",{title:"required"},"R"),"/",Object(r.b)("abbr",{title:"optional"},"O")),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Default Value"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Required"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"string")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"N/A")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"string")," (one or more characters)")))),Object(r.b)("h4",{id:"return-value-8"},"Return value"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"(",Object(r.b)("em",{parentName:"li"},"list")," of ",Object(r.b)("em",{parentName:"li"},"strings"),") ",Object(r.b)("em",{parentName:"li"},"list")," of missing glyph(s)' characters"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"None")," if all the glyphs in your ",Object(r.b)("em",{parentName:"li"},"string")," exist in the font")),Object(r.b)("h4",{id:"description-11"},"Description"),Object(r.b)("p",null,"Check if there is any missing glyph and gets these glyphs' character."),Object(r.b)("h2",{id:"draw"},Object(r.b)("inlineCode",{parentName:"h2"},".draw()")),Object(r.b)("h4",{id:"syntax-12"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),".draw(string, linelimit, mode, direction, usecurrentglyphspacing, missing)\n")),Object(r.b)("h4",{id:"examples-9"},"Examples"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"# draw 'Bdf Hi' to a bitmap:\nfont.draw('Bdf Hi')\n# each glyph could be wider when mode=0:\nself.font.draw('Bdf Hi', mode=0)\n# right to left:\nself.font.draw('\u0645\u0631\u062d\u0628\u0627', direction='rl')\n# each line has 30 pixels instead of 512 by default:\nfont.draw('Bdf Hi', linelimit=30)\n\n# This font only has latin and arabic support\ntestfont = Font('tests/fonts/unifont-13.0.04-for-test.bdf')\n# You can optionnally specify the missing glyphs' replacement\n# instead of a 0-width-and-height empty glyph by default\ntestfont.draw('B\xe9 H\u597d\u0394i\u7684',\n  missing={'glyphname': 'missing glyph', 'codepoint': 0, 'bbw': 16, 'bbh': 16, 'bbxoff': 0, 'bbyoff': -2, 'swx0': 1000, 'swy0': 0, 'dwx0': 16, 'dwy0': 0, 'swx1': None, 'swy1': None, 'dwx1': None, 'dwy1': None, 'vvectorx': None, 'vvectory': None, 'hexdata': ['0000', '0000', '0000', '3ff8', '3018', '2828', '2448', '2288', '2108', '2288', '2448', '2828', '3018', '3ff8', '0000', '0000']}\n)  # the missing replacement is \"\u2327\" (\"x\" in a rectangle box)\n")),Object(r.b)("h4",{id:"parameters-9"},"Parameters"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("abbr",{title:"required"},"R"),"/",Object(r.b)("abbr",{title:"optional"},"O")),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Default Value"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Required"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"string")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"N/A")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"The words, the setences, the paragraphs you want to draw")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"linelimit")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"integer")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"512")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Maximum pixels per line (row)")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"mode")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"integer")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"1")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"0"),": uses ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../bdf_spec/file_format/global_font_info#fontboundingbox"}),"ffb"),", glyphs will be fixed-width (monospace) and -height",Object(r.b)("br",null),Object(r.b)("inlineCode",{parentName:"td"},"1"),": uses ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../bdf_spec/file_format/individual_glyph_info#dwidth"}),"dwidth")," horizontally, ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../bdf_spec/file_format/individual_glyph_info#dwidth1"}),"dwidth1")," vertically")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"direction")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"string")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"'lrtb'")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Writing direction. See below")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"usecurrentglyphspacing")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"boolean")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"False")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Useful when ",Object(r.b)("inlineCode",{parentName:"td"},"direction='rl'"),". For example, ",Object(r.b)("inlineCode",{parentName:"td"},"font.draw('a\u7684', direction='rl')"),' will misplace the wider "\u7684" on the narrower "U" because normally we use the previous glyph\'s spacing (',Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../bdf_spec/file_format/individual_glyph_info#dwidth"}),"dwidth"),"). You can use ",Object(r.b)("inlineCode",{parentName:"td"},"font.draw('a\u7684', direction='rl', usecurrentglyphspacing=True)")," to use the current one and solve the problem")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"missing")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"dictionary")," or ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"glyph"}),Object(r.b)("em",{parentName:"a"},"Glyph"))," object"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"An empty glyph with hexdata ",Object(r.b)("inlineCode",{parentName:"td"},"[]")," and metrics all ",Object(r.b)("inlineCode",{parentName:"td"},"0")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"The missing glyphs will be replaced by this one. It can be a ",Object(r.b)("em",{parentName:"td"},"dictionary")," of glyph meta information, or a ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"glyph"}),Object(r.b)("em",{parentName:"a"},"Glyph"))," object")))),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"direction"),":"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'lrtb'")," or ",Object(r.b)("inlineCode",{parentName:"li"},"'lr'"),": left to right, lines from top to bottom (most common direction)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'lrbt'"),": left to right, lines from bottom to top"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'rltb'")," or ",Object(r.b)("inlineCode",{parentName:"li"},"'rl'"),": right to left, lines from top to bottom (Arabic, Hebrew, Persian, Urdu)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'rlbt'"),": right to left, lines from bottom to top"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'tbrl'")," or ",Object(r.b)("inlineCode",{parentName:"li"},"'tb'"),": top to bottom, lines from right to left (Chinese traditionally)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'tblr'"),": top to bottom, lines from left to right"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'btrl'")," or ",Object(r.b)("inlineCode",{parentName:"li"},"'bt'"),": bottom to top, lines from right to left"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"'btlr'"),": bottom to top, lines from left to right")),Object(r.b)("h4",{id:"return-value-9"},"Return value"),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"bitmap"}),Object(r.b)("em",{parentName:"a"},"Bitmap"))," object"),Object(r.b)("h4",{id:"description-12"},"Description"),Object(r.b)("p",null,"Draw (render) the glyphs of the specified words / setences / paragraphs (as a ",Object(r.b)("em",{parentName:"p"},"string"),"), to a ",Object(r.b)("em",{parentName:"p"},"Bitmap")," object."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"See the ",Object(r.b)("inlineCode",{parentName:"p"},"missing")," parameter if you need to handle potentially missing glyphs."))),Object(r.b)("h2",{id:"drawcps"},Object(r.b)("inlineCode",{parentName:"h2"},".drawcps()")),Object(r.b)("h4",{id:"syntax-13"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),".drawcps(cps, linelimit, mode, direction, usecurrentglyphspacing, missing)\n")),Object(r.b)("h4",{id:"examples-10"},"Examples"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"# this is the same as `font.draw('Bdf Hi')`\nfont.drawcps([66, 100, 102, 32, 72, 105])\n")),Object(r.b)("h4",{id:"parameters-10"},"Parameters"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("abbr",{title:"required"},"R"),"/",Object(r.b)("abbr",{title:"optional"},"O")),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Default Value"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"cps")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Required"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"iterable")," of ",Object(r.b)("em",{parentName:"td"},"integers")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"N/A")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("em",{parentName:"td"},"iterable")," (",Object(r.b)("em",{parentName:"td"},"list"),", ",Object(r.b)("em",{parentName:"td"},"generator")," or any other ",Object(r.b)("em",{parentName:"td"},"iterable"),") of codepoints")))),Object(r.b)("p",null,"For the rest of the parameters (",Object(r.b)("inlineCode",{parentName:"p"},"linelimit"),", ",Object(r.b)("inlineCode",{parentName:"p"},"mode"),", ",Object(r.b)("inlineCode",{parentName:"p"},"direction")," and ",Object(r.b)("inlineCode",{parentName:"p"},"usecurrentglyphspacing"),"), see ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#draw"}),Object(r.b)("inlineCode",{parentName:"a"},".draw()")),'\'s "Parameters" section'),Object(r.b)("h4",{id:"return-value-10"},"Return value"),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"bitmap"}),Object(r.b)("em",{parentName:"a"},"Bitmap"))," object"),Object(r.b)("h4",{id:"description-13"},"Description"),Object(r.b)("p",null,"Draw the glyphs of the specified codepoints, to a ",Object(r.b)("em",{parentName:"p"},"Bitmap")," object."),Object(r.b)("p",null,"This method is almost identical to ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#draw"}),Object(r.b)("inlineCode",{parentName:"a"},".draw()")),", except in the first parameter, it uses ",Object(r.b)("em",{parentName:"p"},"iterable")," of codepoints instead of ",Object(r.b)("em",{parentName:"p"},"string")),Object(r.b)("h2",{id:"drawall"},Object(r.b)("inlineCode",{parentName:"h2"},".drawall()")),Object(r.b)("h4",{id:"syntax-14"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),".drawall(order, r, linelimit, mode, direction, usecurrentglyphspacing)\n")),Object(r.b)("h4",{id:"examples-11"},"Examples"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"# draw all glyphs in the font, linelimit is 512 pixels by default:\nfont.drawall()\n# change linelimit\nfont.drawall(linelimit=700)\n")),Object(r.b)("h4",{id:"parameters-11"},"Parameters"),Object(r.b)("p",null,"For parameters ",Object(r.b)("inlineCode",{parentName:"p"},"order")," and ",Object(r.b)("inlineCode",{parentName:"p"},"r"),", see ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#iterglyphs"}),Object(r.b)("inlineCode",{parentName:"a"},".iterglyphs()")),'\'s "Parameters" section'),Object(r.b)("p",null,"For the rest of the parameters (",Object(r.b)("inlineCode",{parentName:"p"},"linelimit"),", ",Object(r.b)("inlineCode",{parentName:"p"},"mode"),", ",Object(r.b)("inlineCode",{parentName:"p"},"direction")," and ",Object(r.b)("inlineCode",{parentName:"p"},"usecurrentglyphspacing"),"), see ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#draw"}),Object(r.b)("inlineCode",{parentName:"a"},".draw()")),'\'s "Parameters" section'),Object(r.b)("p",null,"Those parameters have the same names, meanings, optional-ness (they are all optional), types and default values as the ones in ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#iterglyphs"}),Object(r.b)("inlineCode",{parentName:"a"},".iterglyphs()"))," and ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#draw"}),Object(r.b)("inlineCode",{parentName:"a"},".draw()")),", ",Object(r.b)("strong",{parentName:"p"},"except one thing: ",Object(r.b)("inlineCode",{parentName:"strong"},"mode")," is ",Object(r.b)("inlineCode",{parentName:"strong"},"0")," by default")," (",Object(r.b)("inlineCode",{parentName:"p"},"mode=0"),": the glyphs will have the same width and height)"),Object(r.b)("h4",{id:"return-value-11"},"Return value"),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"bitmap"}),Object(r.b)("em",{parentName:"a"},"Bitmap"))," object"),Object(r.b)("h4",{id:"description-14"},"Description"),Object(r.b)("p",null,"Draw all the glyphs in the font (default) or in the specified codepoint range in the font, sorted by the specified order (or by the ascending codepoint order by default), to a ",Object(r.b)("em",{parentName:"p"},"Bitmap")," object."),Object(r.b)("p",null,"This method is like a combined version of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#iterglyphs"}),Object(r.b)("inlineCode",{parentName:"a"},".iterglyphs()")),"/",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#itercps"}),Object(r.b)("inlineCode",{parentName:"a"},".itercps()"))," and ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#draw"}),Object(r.b)("inlineCode",{parentName:"a"},".draw()")),"/",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#drawcps"}),Object(r.b)("inlineCode",{parentName:"a"},".drawcps()")),"."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Read ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"bitmap#tobytes"}),"the section for ",Object(r.b)("em",{parentName:"a"},"Bitmap"),"'s .tobytes()")," to know how to output your bitmap to BMP / PNG / JPEG files."))))}o.isMDXComponent=!0},97:function(e,t,a){"use strict";a.d(t,"a",(function(){return O})),a.d(t,"b",(function(){return d}));var n=a(0),b=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,b=function(e,t){if(null==e)return{};var a,n,b={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(b[a]=e[a]);return b}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(b[a]=e[a])}return b}var p=b.a.createContext({}),o=function(e){var t=b.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},O=function(e){var t=o(e.components);return b.a.createElement(p.Provider,{value:t},e.children)},j={inlineCode:"code",wrapper:function(e){var t=e.children;return b.a.createElement(b.a.Fragment,{},t)}},m=b.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),O=o(a),m=n,d=O["".concat(i,".").concat(m)]||O[m]||j[m]||r;return a?b.a.createElement(d,l(l({ref:t},p),{},{components:a})):b.a.createElement(d,l({ref:t},p))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,i=new Array(r);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var p=2;p<r;p++)i[p]=a[p];return b.a.createElement.apply(null,i)}return b.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);